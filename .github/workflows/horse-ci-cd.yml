# Workflow name
name: CI/CD Workflow
# Trigger the workflow on every 'push' and 'pull' event
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  EPEM_ENDPOINT: 10.208.211.11
  EPEM_PORT: 5002

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login "${{ secrets.GHCR_URL }}" -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.GHCR_IMAGE }} .
        docker push ${{ secrets.GHCR_IMAGE }}
  
  tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login "${{ secrets.GHCR_URL }}" -u "${{ github.actor }}" --password-stdin

    - name: Get docker-compose for IBI
      id: get-docker-compose-ibi
      run: |
        curl -o compose-ibi.yaml -H "Authorization: Token ${{ secrets.GHCR_TOKEN }}" \
        https://raw.githubusercontent.com/HORSE-EU-Project/IBI/main/docker-compose.gh.yml

    # - name: Get docker-compose for RTR
    #   id: get-docker-compose-rtr
    #   run: |
    #     curl -o compose-rtr.yaml -H "Authorization: Token ${{ secrets.GHCR_TOKEN }}" \
    #     https://raw.githubusercontent.com/HORSE-EU-Project/IBI/main/docker-compose.gh.yml
    
    - name: Create shared-network
      run: docker network create shared-network

    - 

    



    # - name: Build Docker images
    #   run: docker-compose -f docker-compose.prod.yml build

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install pytest

    # - name: Run get_home test
    #   run: pytest tests/test_home.py
    
    # - name: Stop Docker containers
    #   run: docker-compose down